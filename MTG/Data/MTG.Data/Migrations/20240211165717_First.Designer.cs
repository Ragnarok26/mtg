// <auto-generated />
using System;
using MTG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTG.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240211165717_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MTG.Entities.Database.Article", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("MTG.Entities.Database.ArticleStore", b =>
                {
                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ArticleCode", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("ArticleStore");
                });

            modelBuilder.Entity("MTG.Entities.Database.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MTG.Entities.Database.ClientArticle", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArticleCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientId", "ArticleCode");

                    b.HasIndex("ArticleCode");

                    b.ToTable("ClientArticle");
                });

            modelBuilder.Entity("MTG.Entities.Database.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("MTG.Entities.Database.ArticleStore", b =>
                {
                    b.HasOne("MTG.Entities.Database.Article", "Article")
                        .WithMany("ArticleStores")
                        .HasForeignKey("ArticleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTG.Entities.Database.Store", "Store")
                        .WithMany("ArticleStores")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("MTG.Entities.Database.ClientArticle", b =>
                {
                    b.HasOne("MTG.Entities.Database.Article", "Article")
                        .WithMany("ClientArticles")
                        .HasForeignKey("ArticleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTG.Entities.Database.Client", "Client")
                        .WithMany("ClientArticles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MTG.Entities.Database.Article", b =>
                {
                    b.Navigation("ArticleStores");

                    b.Navigation("ClientArticles");
                });

            modelBuilder.Entity("MTG.Entities.Database.Client", b =>
                {
                    b.Navigation("ClientArticles");
                });

            modelBuilder.Entity("MTG.Entities.Database.Store", b =>
                {
                    b.Navigation("ArticleStores");
                });
#pragma warning restore 612, 618
        }
    }
}
